#cloud-config
---
hostname: i0.sdwan-demo.com
ssh_authorized_keys:
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUKXJgShJMrBFi6VvKCsCJO9c1wLA3ugL3LAJGsRO9KXdZGmLC74/s0KVw4uaWHoTz91qLPdnplSdLU3KDK7loIdKRBR8E4KJ1MiZKGIj7F9NsniiNetQkKvUazrhRx8nFOAYSPD4znkhrh53nXnsI2WDACt0CGNYX33hV3J/kblWYit/wcIEtJg1ivFmBrljtAMZpS2mBpAK0kySCY2BP+Ph8x+6EuCkH1w2J4Moa0fYkibF3K7O4cmcWAtD53eyr8YN4JKvAwTe+uXVsdFDUNkZvCdOLTDDRd7t7C+qL3nbJMv5jVoED0bBBfn7NfEfyqLOzXHmE4bfuMo7KBlH7 vod@agrajag.0.njk.li"
rancher:
  state:
    required: true
    wait: true
    fstype: auto
    dev: LABEL=RANCHER_STATE
    autoformat:
    - /dev/sda
  modules: [kvm, kvm_intel, vhost-net, autofs4]
  docker:
    # tls: false
    engine: docker-1.12.6
    storage_driver: overlay2
  console: debian
  network:
    dns:
      nameservers:
      - 8.8.8.8
      - 8.8.4.4

  # Apparently can only be used in the same named block in service definition
  # environment:
  #   NGINX_FILES_PATH: "/opt/nginx"

  services:

    nginx:
      image: nginx
      labels:
          com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
      container_name: nginx
      restart: unless-stopped
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - /opt/nginx/conf.d:/etc/nginx/conf.d
        - /opt/nginx/vhost.d:/etc/nginx/vhost.d
        - /opt/nginx/html:/usr/share/nginx/html
        - /opt/nginx/certs:/etc/nginx/certs:ro
    nginx-gen:
      image: jwilder/docker-gen
      command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
      container_name: nginx-gen
      restart: unless-stopped
      volumes:
        - /opt/nginx/conf.d:/etc/nginx/conf.d
        - /opt/nginx/vhost.d:/etc/nginx/vhost.d
        - /opt/nginx/html:/usr/share/nginx/html
        - /opt/nginx/certs:/etc/nginx/certs:ro
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - /opt/config/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    nginx-letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      container_name: nginx-letsencrypt
      restart: unless-stopped
      volumes:
        - /opt/nginx/conf.d:/etc/nginx/conf.d
        - /opt/nginx/vhost.d:/etc/nginx/vhost.d
        - /opt/nginx/html:/usr/share/nginx/html
        - /opt/nginx/certs:/etc/nginx/certs:rw
        - /var/run/docker.sock:/var/run/docker.sock:ro
      environment:
        NGINX_DOCKER_GEN_CONTAINER: "nginx-gen"
        NGINX_PROXY_CONTAINER: "nginx"

    teleport:
      image: voobscout/viptela:teleport
      command: 'teleport start --roles=proxy,auth,node --config /etc/teleport.yml'
      restart: always
      volumes:
        # - /mnt/config/teleport:/var/lib/teleport
        - /opt/config/teleport.yml:/etc/teleport.yml
      ports:
        - 3022:3022
        - 3023:3023
        - 3024:3024
        - 3025:3025
        - 3080:3080

    rancher-server:
      image: rancher/server
      restart: unless-stopped
      expose:
        - 8080
      volumes:
        - /opt/rancher_mysql:/var/lib/mysql
      environment:
        VIRTUAL_HOST: rs.sdwan-demo.com
        VIRTUAL_PROTO: http
        VIRTUAL_PORT: 8080
        LETSENCRYPT_HOST: rs.sdwan-demo.com
        LETSENCRYPT_EMAIL: webadmin@r.sdwan-demo.com

write_files:
  - path: /opt/rancher/bin/start.sh
    permissions: "0755"
    owner: root
    content: |
      #!/usr/bin/env bash
      # This runs before user-docker
      _chk_upgrade() {
        [[ $(apt update | grep 'can be upgraded') ]] && apt -y full-upgrade
      }

      _install_user_scripts() {
        local scripts=("run_before_docker" "run_after_docker")
        local uri="https://raw.githubusercontent.com/sdwandemo/service/master/scripts"
        for i in ${scripts[@]}; do
          curl $uri/$i > /opt/rancher/bin/$i
          chmod 0755 /opt/rancher/bin/$i
        done
      }

      _chk_upgrade
      _install_user_scripts
      exec /opt/rancher/bin/run_before_docker

  - path: /etc/rc.local
    permissions: "0755"
    owner: root
    content: |
      #!/usr/bin/env bash
      # This runs after user-docker
      wait-for-docker
      exec /opt/rancher/bin/run_after_docker

  - path: /etc/ssh/sshd_config
    permissions: "0644"
    owner: root:root
    content: |
      Port 16777
      UsePrivilegeSeparation yes
      ClientAliveInterval 180
      TCPKeepAlive yes
      KeyRegenerationInterval 3600
      ServerKeyBits 1024
      SyslogFacility AUTHPRIV
      LogLevel INFO
      LoginGraceTime 120
      PermitRootLogin no
      StrictModes yes
      IgnoreRhosts yes
      RhostsRSAAuthentication no
      HostbasedAuthentication no
      PermitEmptyPasswords no
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      RSAAuthentication yes
      PubkeyAuthentication yes
      PrintLastLog yes
      AcceptEnv *
      UseDNS no
      UsePAM yes

  - path: "/etc/fuse.conf"
    permissions: "0640"
    owner: root:fuse
    content: |
      user_allow_other
...
